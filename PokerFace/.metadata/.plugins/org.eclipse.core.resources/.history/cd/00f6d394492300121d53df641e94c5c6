
package ch.hearc.coursjava.poo.complexe;

import static org.junit.Assert.assertTrue;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import ch.hearc.coursjava.kitbase.tools.MathTools;

public class ComplexeTest
	{

	/*------------------------------------------------------------------*\
	 |*							Constructeurs							*|
	 \*------------------------------------------------------------------*/

	@Before
	public void before()
		{
		// rien
		}

	@After
	public void after()
		{
		// rien
		}

	/*------------------------------------------------------------------*\
	 |*							Methodes Public							*|
	 \*-----------------------------------------------------------------*/

	@Test
	public void testGetter()
		{
		Complexe z = new Complexe(4, 3);

		assertTrue(z.getIm() == 3);
		assertTrue(z.getRe() == 4);
		assertTrue(z.getModule() == 5);
		assertTrue(MathTools.isEgal(z.getArgument(), Math.atan2(3, 4), 1e-6));
		}

	@Test
	public void testAdd()
		{
		Complexe z1 = new Complexe(1.5, 2);
		Complexe z2 = new Complexe(0.5, 3);

		Complexe resultat = z1.add(z2);
		Complexe resultatTheorique = new Complexe(2, 5);

		assertTrue(resultat.isEquale(resultatTheorique));
		}

	@Test
	public void testSous()
		{
		Complexe z1 = new Complexe(1.5, 2);
		Complexe z2 = new Complexe(0.5, 3);

		Complexe resultat = z1.sous(z2);
		Complexe resultatTheorique = new Complexe(1, -1);

		assertTrue(resultat.isEquale(resultatTheorique));
		}

	@Test
	public void testProdFacteur()
		{
		Complexe z1 = new Complexe(1, -2);

		Complexe resultat = z1.produit(-5);
		Complexe resultatTheorique = new Complexe(-5, 10);

		assertTrue(resultat.isEquale(resultatTheorique));
		}

	@Test
	public void testProd()
		{
		Complexe z1 = Complexe.create(3, 2);
		Complexe z2 = Complexe.create(0.5, 3);

		Complexe resultat = z1.produit(z2);
		Complexe resultatTheorique = Complexe.create(1.5, 5);

		assertTrue(resultat.isEquale(resultatTheorique));
		}

	@Test
	public void testDivFactuer()
		{
		Complexe z1 = new Complexe(1, -2);

		Complexe resultat = z1.div(-5);
		Complexe resultatTheorique = new Complexe(-0.2, 0.4);

		assertTrue(resultat.isEquale(resultatTheorique));
		}

	@Test
	public void testGravite()
		{
		//TODO:
		assertTrue(false);
		}

	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/

	}
